<%- include public/header %>
<% if (user) { %>
<style>
body{
    background: #ebebeb;
}
</style>
<div class="room-box">
    <div class="canvas"><canvas id="canvas"></canvas></div>
    <div class="tool">
        <label class="f14">笔号：</label>
        <select class="pan-size">
            <option value="1">1号</option>
            <option value="5">5号</option>
            <option value="10">10号</option>
            <option value="15">15号</option>
            <option value="20">20号</option>
            <option value="25">25号</option>
        </select>
        <label class="f14">颜色：</label>
        <span class="pan-color color1 active"></span>
        <span class="pan-color color2"></span>
        <span class="pan-color color3"></span>
        <span class="pan-color color4"></span>
        <span class="pan-color color5"></span>
        <span class="pan-color color6"></span>
    </div>
    <div class="question cle">
        <span class="f14">题目：<i class="c_red f14">水壶</i></span>
        <input class="f14 fr" type="button" value="重画">
        <input class="f14 fr" type="button" value="换题">
    </div>
    <div class="room-mg">
        <div class="tips f14">房间在线人数（10）</div>
        <div class="list">
            <ul id="list">
            </ul>
        </div>
    </div>
    <div class="send cle">
        <input type="text" class="text f14 fl" placeholder="聊天或发送答案">
        <input type="text" class="submit f14 fl" value="确定">
        <input type="text" class="answer f14 fr c_red" value="答题"> 
    </div>
</div>
<script>
$(function(){
    var username = '<%= user.name %>';
    var uid = '<%= user.uid%>';
    var roomid = '<%= roomid%>';
    var $list = $('#list');
    var oCanvas = document.getElementById('can');
    var context = canvas.getContext('2d');
    var isButtonDown = false;

    if(username){
        var socket = io.connect();
        socket.emit('login');

         //房间消息
        socket.on('roomMsg', function(roomId, type, data, msg){
            console.log(type)

            console.log(data)
            if(type == 'INROOM'){
                $list.append('<li class="c_666 f14">系统消息：<span class="c_red">'+ data.name +'</span>进入了房间</li>');
            }else if(type == 'OUTROOM'){
                $list.append('<li class="c_666 f14">系统消息：<span class="c_red">'+ data.name +'</span>离开了房间</li>');
            }else if(type == 'TEXTMSG'){
                $list.append('<li class="c_666 f14">' + data.name + '：<span class="c_red">'+ msg + '</li>');
            }else if(type == 'GUESSING'){
                $list.append('<li class="c_666 f14">' + data.name + '的答案：<span class="c_red">'+ msg + '</li>');
            }else if(type == 'SUCCRSS'){
                $list.append('<li class="c_666 f14">' + data.name + '的答案：<span class="c_red">'+ msg + '，猜对了</li>');
                removeEven();
                clearCanvans();
                //$timushi.html('');
            }else if(type == 'FAIL'){
                $list.append('<li class="c_666 f14">' + data.name + '的答案：<span class="c_red">'+ msg + '，猜错啦</li>');
                //$list.append('<p class="green">' + data.name + '猜：' + msg + '，猜错啦</p>');
            }
        });
    }

})    
</script>
<%}%>
<%- include public/footer %>


<!-- 

  <% if (user) { %>
  <script>
  var username = '<%= user.name %>';
  var uid = '<%= user.uid%>';
  var roomid = '<%= roomid%>';
  var $list = $('#list');
  var $medraw = $('#medraw');
  var $meguess = $('#meguess');
  var $tool = $('#tool');
    var $submit = $('#submit');
    var $text = $('#text');
    var $clear = $('#clear');
    var $pensize = $('#pensize');
    var $pencolor = $('#pencolor');
    var $change = $('#change');
    var $guess = $('#guess');
    var $question = $('#question');
    var $timushi = $('#timushi');
    //画图部分
    var canvas = document.getElementById('can');
    var context = canvas.getContext('2d');
    var isButtonDown = false;

  $(function(){
      if(username){
          var socket = io.connect();
            //登陆
              socket.emit('login');

              //系统消息
              socket.on('systemMessage', function(type, data, msg){
                if(type == 'ONLINE'){
                  $list.append('<p class="blue">' + data.name + '上线了' + '</p>')
                }else if(type == 'OFFLINE'){
                  $list.append('<p class="red">' + data.name + '离线了' + '</p>')
                }
              });

              //私密我的通知
              socket.on('notice', function(msg){
                $list.append('<p class="red">' + msg + '</p>')
              })

              //即时在线的用户
              socket.on('onlineUsers', function(data){
                //console.log('在线用户' + JSON.stringify(data))
              });

              //当前在线房间数量
              socket.on('roomInfo', function(data){
                //console.log('房间数' + JSON.stringify(data))
              });

              //当前房间的信息
              socket.on('roomById', function(data){
                if(data.palyer.length == 2){
                  $medraw.hide();
                  $meguess.hide();
                }else{
                        $medraw.show();
                        $meguess.show();
                    }
                    $.each(data.palyer, function(index, item){
                        if(item.type == 'PLAYGUESS'){
                            $meguess.hide();
                        }else if(item.type == 'PLAYERDRAW'){
                            $medraw.hide();
                        }
                    })
   
              })

              //房间消息
              socket.on('roomMsg', function(roomId, type, data, msg){
                    console.log(type)

                    console.log(data)
                  if(type == 'INROOM'){
                    $list.append('<p class="blue">' + data.name + '进房间了' + '</p>');
                  }else if(type == 'OUTROOM'){
                    $list.append('<p class="red">' + data.name + '离开房间了' + '</p>');
                  }else if(type == 'TEXTMSG'){
                    $list.append('<p class="green">' + data.name + '说：' + msg + '</p>');
                  }else if(type == 'GUESSING'){
                        $list.append('<p class="green">' + data.name + '猜：' + msg + '</p>');
                    }else if(type == 'SUCCRSS'){
                        $list.append('<p class="green">' + data.name + '猜：' + msg + '，猜对啦</p>');
                        removeEven();
                        clearCanvans();
                        $timushi.html('');
                    }else if(type == 'FAIL'){
                        $list.append('<p class="green">' + data.name + '猜：' + msg + '，猜错啦</p>');
                    }
              });

              //游戏准备状态
              socket.on('playStatus', function(roomId, type, user){
                if(type == 'PLAYERDRAW'){
                  $list.append('<p class="blue">' + user.name + '选择了画' + '</p>');
                }else if(type == 'PLAYGUESS'){
                  $list.append('<p class="blue">' + user.name + '选择了猜' + '</p>');
                  $meguess.hide();
                }else if(type == 'START'){
                  $list.append('<p class="blue">游戏开始了</p>');
                        $.each(user, function(index,item){
                            if(item.uid == uid){
                                if(item.type == 'PLAYERDRAW'){
                                    addEven();
                                }else if(item.type == 'PLAYGUESS'){
                                    removeEven();
                                }
                            }
                        })
                }
              });

                //游戏信息
                socket.on('play', function(roomId, play){
                    $timushi.html('题目是<i class="red">' + play.question + '</i>');
                })

                //画图
                socket.on('roomDraw', function(type, from, data, set){
                    if(type == 'BEGIN'){
                        if(from.uid != uid){
                            context.lineWidth = set.size;
                            context.strokeStyle = set.color;
                            context.beginPath();
                            context.moveTo(data.x, data.y);
                        }
                    }else if(type == 'MOVE'){
                        context.lineTo(data.x, data.y);
                        context.stroke();
                    }else if(type == 'CLEAR'){
                        clearCanvans();
                    }
                })

              //离开房间
              $('#leaveRoom').click(function(){
                  socket.emit('leaveRoom', $(this).data('id'))
              });

              //发送文本消息
              function send(){
                var val = $text.val();
                if(val == ''){
                  console.log('请输入消息')
                  return;
                }
                socket.send(roomid, 'TEXTMSG', val)
                $text.val('').focus();
              };
              $text.keydown(function(e){
                if(e.keyCode == 13){
                  e.preventDefault();
                  send();
                }
              })
              $submit.click(function(){
                send();
              });

              //我来画
              $medraw.click(function(){
                socket.emit('ready', roomid, 'PLAYERDRAW');
              })
              //我来猜
              $meguess.click(function(){
                socket.emit('ready', roomid, 'PLAYGUESS');
              })

                //鼠标按下
                function _mousedown(e){
                    isButtonDown = true;
                    var set = {
                        size: $pensize.val(),
                        color: $pencolor.val()
                    };
                    context.lineWidth = set.size;
                    context.strokeStyle = set.color;
                    var pos = {
                        x: e.pageX - canvas.offsetLeft,
                        y: e.pageY - canvas.offsetTop
                    };
                    context.beginPath();
                    context.moveTo(pos.x, pos.y);
                    //发送房间id 绘画类型 坐标 笔的设置
                    socket.emit('canvansMsg', roomid, 'BEGIN', pos, set)
                }
                //鼠标移动
                function _mousemove(e){
                    if(isButtonDown == true){
                        var pos = {
                            x: e.pageX - canvas.offsetLeft,
                            y: e.pageY - canvas.offsetTop
                        };
                        //画
                        context.lineTo(pos.x, pos.y);
                        context.stroke();
                        socket.emit('canvansMsg', roomid, 'MOVE', pos)
                    }
                }
                //鼠标停止
                function _mouseup(e){
                    isButtonDown = false;
                }
                function _mouseout(e){
                    isButtonDown = false;
                }

                //清空画板
                function clearCanvans(){
                    context.clearRect(0, 0, 500, 500);
                }

                function addEven(){
                    canvas.addEventListener('mousedown', _mousedown);
                    canvas.addEventListener('mousemove', _mousemove);
                    canvas.addEventListener('mouseup', _mouseup);
                    canvas.addEventListener('mouseout', _mouseout);
                }

                function removeEven(){
                    canvas.removeEventListener('mousedown', _mousedown);
                    canvas.removeEventListener('mousemove', _mousemove);
                    canvas.removeEventListener('mouseup', _mouseup);
                    canvas.removeEventListener('mouseout', _mouseout);
                }

                $clear.click(function(){
                    clearCanvans();
                    socket.emit('canvansMsg', roomid, 'CLEAR');
                })

                $change.click(function(){
                    clearCanvans();
                    socket.emit('changeQuestion', roomid);
                    socket.emit('canvansMsg', roomid, 'CLEAR');
                })

                $guess.click(function(){
                    var val = $question.val();
                    socket.emit('guess', roomid, val);
                })
      }
  })
  </script>
  <% } else {%>
    <script>
    location.href = '/?callback=' + location.href;    
    </script>
    <% } %>
  </body>
</html>
 -->